
test('Async function with immediate return', (api) -> {
	var afn = () -> ~ {
		return 5
	}

	afn().then((val) -> {
		api.eq(val, 5)
		api.done()
	})
})

test('Async function with object destructuring', (api) -> {
	var ob = {
		a: 2
		b: 6
	}

	var afn = ({a,b}) -> ~ {
		return a * b
	}

	afn(ob).then((val) -> {
		api.eq(val, 12)
		api.done()
	})
})

test('Async function with array destructuring', (api) -> {
	var arr = [4, 5]

	var afn = ([a,b]) -> ~ {
		return a * b
	}

	afn(arr).then((val) -> {
		api.eq(val, 20)
		api.done()
	})
})

test('Async function with single splatt', (api) -> {
	var afn = (...args) -> ~ {
		api.arrayEq(args, [2, 3, 4])
		return args[0] * args[1] * args[2]
	}

	afn(2, 3, 4).then((val) -> {
		api.eq(val, 24)
		api.done()
	})
})

test('Async Function "this" value in method', (api) -> {
	var obj = {
		fn: () -> ~ {
			await Promise.resolve(1)
			api.eq(this, obj)
			await Promise.resolve(2)
			api.done()
		}
	}

	obj.fn()
})