
test('Basic generator function declaration', (api) -> {
    var gen = () -> * {
        yield 4
        yield 5
    }
    
    api.done()
})

test('Basic generator usage', (api) -> {
    var gen = () -> * {
        yield 4
        yield 5
    }
    
    var arr = []
    
    for val in gen()
        arr.push(val)
    
    api.arrayEq(arr, [4, 5])
    api.done()
})

test('Generator delegation', (api) -> {
    var srcGen = () -> * {
        yield 4
        yield 5
    }
    
    var gen = () -> * {
        yield * srcGen()
        yield 1
    }

    var arr = []
    
    for val in gen()
        arr.push(val)
    
    api.arrayEq(arr, [4, 5, 1])
    api.done()
})

test('Generator yield shorthand', (api) -> {
    var gen = () -> * {
        4 >>
        5 >>
        0 >|
    }
    
    var arr = []
    for val in gen() do
        arr.push(val)
    api.arrayEq(arr, [4, 5])
    api.done()
})

test('Generator delegation shorthand', (api) -> {
    var srcGen = () -> * {
        << 4
        5 >>
    }
    
    var gen = () -> * {
        << * srcGen()
        << 1
    }

    const arr = []
    for val in gen() do
        arr.push(val)
    
    api.arrayEq(arr, [4, 5, 1])
    api.done()
})