
test('Function call with spread', (api) -> {
    const args = [1, 2, 3]

    fn(a, b, c, d) -> {
        api.assert(d == undefined)
        
        return [a, 2 * b, c]
    }
    
    
    api.arrayEq(fn(...args), [1, 4, 3])
    api.done()
})

test('Method call with spread', (api) -> {
    const args = [1, 2, 3]

    const obj = {
        fn: (a, b, c, d) -> {
            api.eq(this, obj)
            api.assert(d == undefined)

            return [a, 2 * b, c]
        }
    }
    
    
    api.arrayEq(obj.fn(...args), [1, 4, 3])
    api.done()
})

test('New call with spread', (api) -> {
    const args = [1, 2, 3]

    
    api.arrayEq(new Array(...args), [1, 2, 3])
    api.done()
})
